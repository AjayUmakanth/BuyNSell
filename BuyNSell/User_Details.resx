<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>